# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dckvpb.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import kvrpcpb_pb2 as kvrpcpb__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='dckvpb.proto',
  package='dckvpb',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0c\x64\x63kvpb.proto\x12\x06\x64\x63kvpb\x1a\rkvrpcpb.proto2\xd1\x07\n\x04\x44\x63kv\x12\x34\n\x05KvGet\x12\x13.kvrpcpb.GetRequest\x1a\x14.kvrpcpb.GetResponse\"\x00\x12\x37\n\x06KvScan\x12\x14.kvrpcpb.ScanRequest\x1a\x15.kvrpcpb.ScanResponse\"\x00\x12\x43\n\nKvPrewrite\x12\x18.kvrpcpb.PrewriteRequest\x1a\x19.kvrpcpb.PrewriteResponse\"\x00\x12=\n\x08KvCommit\x12\x16.kvrpcpb.CommitRequest\x1a\x17.kvrpcpb.CommitResponse\"\x00\x12=\n\x08KvImport\x12\x16.kvrpcpb.ImportRequest\x1a\x17.kvrpcpb.ImportResponse\"\x00\x12@\n\tKvCleanup\x12\x17.kvrpcpb.CleanupRequest\x1a\x18.kvrpcpb.CleanupResponse\"\x00\x12\x43\n\nKvBatchGet\x12\x18.kvrpcpb.BatchGetRequest\x1a\x19.kvrpcpb.BatchGetResponse\"\x00\x12R\n\x0fKvBatchRollback\x12\x1d.kvrpcpb.BatchRollbackRequest\x1a\x1e.kvrpcpb.BatchRollbackResponse\"\x00\x12\x43\n\nKvScanLock\x12\x18.kvrpcpb.ScanLockRequest\x1a\x19.kvrpcpb.ScanLockResponse\"\x00\x12L\n\rKvResolveLock\x12\x1b.kvrpcpb.ResolveLockRequest\x1a\x1c.kvrpcpb.ResolveLockResponse\"\x00\x12\x31\n\x04KvGC\x12\x12.kvrpcpb.GCRequest\x1a\x13.kvrpcpb.GCResponse\"\x00\x12L\n\rKvDeleteRange\x12\x1b.kvrpcpb.DeleteRangeRequest\x1a\x1c.kvrpcpb.DeleteRangeResponse\"\x00\x12M\n\x0cMvccGetByKey\x12\x1c.kvrpcpb.MvccGetByKeyRequest\x1a\x1d.kvrpcpb.MvccGetByKeyResponse\"\x00\x12Y\n\x10MvccGetByStartTs\x12 .kvrpcpb.MvccGetByStartTsRequest\x1a!.kvrpcpb.MvccGetByStartTsResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[kvrpcpb__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_DCKV = _descriptor.ServiceDescriptor(
  name='Dckv',
  full_name='dckvpb.Dckv',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=40,
  serialized_end=1017,
  methods=[
  _descriptor.MethodDescriptor(
    name='KvGet',
    full_name='dckvpb.Dckv.KvGet',
    index=0,
    containing_service=None,
    input_type=kvrpcpb__pb2._GETREQUEST,
    output_type=kvrpcpb__pb2._GETRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvScan',
    full_name='dckvpb.Dckv.KvScan',
    index=1,
    containing_service=None,
    input_type=kvrpcpb__pb2._SCANREQUEST,
    output_type=kvrpcpb__pb2._SCANRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvPrewrite',
    full_name='dckvpb.Dckv.KvPrewrite',
    index=2,
    containing_service=None,
    input_type=kvrpcpb__pb2._PREWRITEREQUEST,
    output_type=kvrpcpb__pb2._PREWRITERESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvCommit',
    full_name='dckvpb.Dckv.KvCommit',
    index=3,
    containing_service=None,
    input_type=kvrpcpb__pb2._COMMITREQUEST,
    output_type=kvrpcpb__pb2._COMMITRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvImport',
    full_name='dckvpb.Dckv.KvImport',
    index=4,
    containing_service=None,
    input_type=kvrpcpb__pb2._IMPORTREQUEST,
    output_type=kvrpcpb__pb2._IMPORTRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvCleanup',
    full_name='dckvpb.Dckv.KvCleanup',
    index=5,
    containing_service=None,
    input_type=kvrpcpb__pb2._CLEANUPREQUEST,
    output_type=kvrpcpb__pb2._CLEANUPRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvBatchGet',
    full_name='dckvpb.Dckv.KvBatchGet',
    index=6,
    containing_service=None,
    input_type=kvrpcpb__pb2._BATCHGETREQUEST,
    output_type=kvrpcpb__pb2._BATCHGETRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvBatchRollback',
    full_name='dckvpb.Dckv.KvBatchRollback',
    index=7,
    containing_service=None,
    input_type=kvrpcpb__pb2._BATCHROLLBACKREQUEST,
    output_type=kvrpcpb__pb2._BATCHROLLBACKRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvScanLock',
    full_name='dckvpb.Dckv.KvScanLock',
    index=8,
    containing_service=None,
    input_type=kvrpcpb__pb2._SCANLOCKREQUEST,
    output_type=kvrpcpb__pb2._SCANLOCKRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvResolveLock',
    full_name='dckvpb.Dckv.KvResolveLock',
    index=9,
    containing_service=None,
    input_type=kvrpcpb__pb2._RESOLVELOCKREQUEST,
    output_type=kvrpcpb__pb2._RESOLVELOCKRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvGC',
    full_name='dckvpb.Dckv.KvGC',
    index=10,
    containing_service=None,
    input_type=kvrpcpb__pb2._GCREQUEST,
    output_type=kvrpcpb__pb2._GCRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='KvDeleteRange',
    full_name='dckvpb.Dckv.KvDeleteRange',
    index=11,
    containing_service=None,
    input_type=kvrpcpb__pb2._DELETERANGEREQUEST,
    output_type=kvrpcpb__pb2._DELETERANGERESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='MvccGetByKey',
    full_name='dckvpb.Dckv.MvccGetByKey',
    index=12,
    containing_service=None,
    input_type=kvrpcpb__pb2._MVCCGETBYKEYREQUEST,
    output_type=kvrpcpb__pb2._MVCCGETBYKEYRESPONSE,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='MvccGetByStartTs',
    full_name='dckvpb.Dckv.MvccGetByStartTs',
    index=13,
    containing_service=None,
    input_type=kvrpcpb__pb2._MVCCGETBYSTARTTSREQUEST,
    output_type=kvrpcpb__pb2._MVCCGETBYSTARTTSRESPONSE,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DCKV)

DESCRIPTOR.services_by_name['Dckv'] = _DCKV

# @@protoc_insertion_point(module_scope)
